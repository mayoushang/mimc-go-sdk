// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messaging-protobuf/xiaomi-protobuf-messaging/src/main/proto/ims_push_service.proto

/*
Package ims is a generated protocol buffer package.

It is generated from these files:
	messaging-protobuf/xiaomi-protobuf-messaging/src/main/proto/ims_push_service.proto

It has these top-level messages:
	ClientHeader
	XMMsgConn
	XMMsgConnResp
	XMMsgBind
	XMMsgBindResp
	XMMsgPing
	XMMsgNotify
*/
package ims

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protocol "github.com/mayoushang/mimc-go-sdk/protobuf/protocol"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClientHeader_MSG_DIR_FLAG int32

const (
	ClientHeader_CS_ONEWAY ClientHeader_MSG_DIR_FLAG = 1
	ClientHeader_CS_REQ    ClientHeader_MSG_DIR_FLAG = 2
	ClientHeader_CS_RESP   ClientHeader_MSG_DIR_FLAG = 3
	ClientHeader_SC_ONEWAY ClientHeader_MSG_DIR_FLAG = 4
	ClientHeader_SC_REQ    ClientHeader_MSG_DIR_FLAG = 5
	ClientHeader_SC_RESP   ClientHeader_MSG_DIR_FLAG = 6
)

var ClientHeader_MSG_DIR_FLAG_name = map[int32]string{
	1: "CS_ONEWAY",
	2: "CS_REQ",
	3: "CS_RESP",
	4: "SC_ONEWAY",
	5: "SC_REQ",
	6: "SC_RESP",
}
var ClientHeader_MSG_DIR_FLAG_value = map[string]int32{
	"CS_ONEWAY": 1,
	"CS_REQ":    2,
	"CS_RESP":   3,
	"SC_ONEWAY": 4,
	"SC_REQ":    5,
	"SC_RESP":   6,
}

func (x ClientHeader_MSG_DIR_FLAG) Enum() *ClientHeader_MSG_DIR_FLAG {
	p := new(ClientHeader_MSG_DIR_FLAG)
	*p = x
	return p
}
func (x ClientHeader_MSG_DIR_FLAG) String() string {
	return proto.EnumName(ClientHeader_MSG_DIR_FLAG_name, int32(x))
}
func (x *ClientHeader_MSG_DIR_FLAG) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientHeader_MSG_DIR_FLAG_value, data, "ClientHeader_MSG_DIR_FLAG")
	if err != nil {
		return err
	}
	*x = ClientHeader_MSG_DIR_FLAG(value)
	return nil
}
func (ClientHeader_MSG_DIR_FLAG) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type ClientHeader struct {
	Chid     *int32                     `protobuf:"varint,1,opt,name=chid" json:"chid,omitempty"`
	Uuid     *int64                     `protobuf:"varint,2,opt,name=uuid" json:"uuid,omitempty"`
	Server   *string                    `protobuf:"bytes,3,opt,name=server" json:"server,omitempty"`
	Resource *string                    `protobuf:"bytes,4,opt,name=resource" json:"resource,omitempty"`
	Cmd      *string                    `protobuf:"bytes,5,opt,name=cmd" json:"cmd,omitempty"`
	Subcmd   *string                    `protobuf:"bytes,6,opt,name=subcmd" json:"subcmd,omitempty"`
	Id       *string                    `protobuf:"bytes,7,opt,name=id" json:"id,omitempty"`
	DirFlag  *ClientHeader_MSG_DIR_FLAG `protobuf:"varint,8,opt,name=dir_flag,json=dirFlag,enum=ims.ClientHeader_MSG_DIR_FLAG" json:"dir_flag,omitempty"`
	Cipher   *int32                     `protobuf:"varint,9,opt,name=cipher" json:"cipher,omitempty"`
	// 错误码
	ErrCode          *int32  `protobuf:"varint,10,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrStr           *string `protobuf:"bytes,11,opt,name=err_str,json=errStr" json:"err_str,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClientHeader) Reset()                    { *m = ClientHeader{} }
func (m *ClientHeader) String() string            { return proto.CompactTextString(m) }
func (*ClientHeader) ProtoMessage()               {}
func (*ClientHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ClientHeader) GetChid() int32 {
	if m != nil && m.Chid != nil {
		return *m.Chid
	}
	return 0
}

func (m *ClientHeader) GetUuid() int64 {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return 0
}

func (m *ClientHeader) GetServer() string {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return ""
}

func (m *ClientHeader) GetResource() string {
	if m != nil && m.Resource != nil {
		return *m.Resource
	}
	return ""
}

func (m *ClientHeader) GetCmd() string {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return ""
}

func (m *ClientHeader) GetSubcmd() string {
	if m != nil && m.Subcmd != nil {
		return *m.Subcmd
	}
	return ""
}

func (m *ClientHeader) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *ClientHeader) GetDirFlag() ClientHeader_MSG_DIR_FLAG {
	if m != nil && m.DirFlag != nil {
		return *m.DirFlag
	}
	return ClientHeader_CS_ONEWAY
}

func (m *ClientHeader) GetCipher() int32 {
	if m != nil && m.Cipher != nil {
		return *m.Cipher
	}
	return 0
}

func (m *ClientHeader) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *ClientHeader) GetErrStr() string {
	if m != nil && m.ErrStr != nil {
		return *m.ErrStr
	}
	return ""
}

type XMMsgConn struct {
	Version          *uint32                        `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Model            *string                        `protobuf:"bytes,2,opt,name=model" json:"model,omitempty"`
	Os               *string                        `protobuf:"bytes,3,opt,name=os" json:"os,omitempty"`
	Udid             *string                        `protobuf:"bytes,4,opt,name=udid" json:"udid,omitempty"`
	Sdk              *int32                         `protobuf:"varint,5,opt,name=sdk" json:"sdk,omitempty"`
	Connpt           *string                        `protobuf:"bytes,6,opt,name=connpt" json:"connpt,omitempty"`
	Host             *string                        `protobuf:"bytes,7,opt,name=host" json:"host,omitempty"`
	Locale           *string                        `protobuf:"bytes,8,opt,name=locale" json:"locale,omitempty"`
	Psc              *protocol.PushServiceConfigMsg `protobuf:"bytes,9,opt,name=psc" json:"psc,omitempty"`
	Andver           *int32                         `protobuf:"varint,10,opt,name=andver" json:"andver,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *XMMsgConn) Reset()                    { *m = XMMsgConn{} }
func (m *XMMsgConn) String() string            { return proto.CompactTextString(m) }
func (*XMMsgConn) ProtoMessage()               {}
func (*XMMsgConn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *XMMsgConn) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *XMMsgConn) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *XMMsgConn) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

func (m *XMMsgConn) GetUdid() string {
	if m != nil && m.Udid != nil {
		return *m.Udid
	}
	return ""
}

func (m *XMMsgConn) GetSdk() int32 {
	if m != nil && m.Sdk != nil {
		return *m.Sdk
	}
	return 0
}

func (m *XMMsgConn) GetConnpt() string {
	if m != nil && m.Connpt != nil {
		return *m.Connpt
	}
	return ""
}

func (m *XMMsgConn) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *XMMsgConn) GetLocale() string {
	if m != nil && m.Locale != nil {
		return *m.Locale
	}
	return ""
}

func (m *XMMsgConn) GetPsc() *protocol.PushServiceConfigMsg {
	if m != nil {
		return m.Psc
	}
	return nil
}

func (m *XMMsgConn) GetAndver() int32 {
	if m != nil && m.Andver != nil {
		return *m.Andver
	}
	return 0
}

type XMMsgConnResp struct {
	Challenge        *string                        `protobuf:"bytes,1,opt,name=challenge" json:"challenge,omitempty"`
	Host             *string                        `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Psc              *protocol.PushServiceConfigMsg `protobuf:"bytes,3,opt,name=psc" json:"psc,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *XMMsgConnResp) Reset()                    { *m = XMMsgConnResp{} }
func (m *XMMsgConnResp) String() string            { return proto.CompactTextString(m) }
func (*XMMsgConnResp) ProtoMessage()               {}
func (*XMMsgConnResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *XMMsgConnResp) GetChallenge() string {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return ""
}

func (m *XMMsgConnResp) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *XMMsgConnResp) GetPsc() *protocol.PushServiceConfigMsg {
	if m != nil {
		return m.Psc
	}
	return nil
}

type XMMsgBind struct {
	Token            *string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Kick             *string `protobuf:"bytes,2,opt,name=kick" json:"kick,omitempty"`
	Method           *string `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
	ClientAttrs      *string `protobuf:"bytes,4,opt,name=client_attrs,json=clientAttrs" json:"client_attrs,omitempty"`
	CloudAttrs       *string `protobuf:"bytes,5,opt,name=cloud_attrs,json=cloudAttrs" json:"cloud_attrs,omitempty"`
	Sig              *string `protobuf:"bytes,6,opt,name=sig" json:"sig,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *XMMsgBind) Reset()                    { *m = XMMsgBind{} }
func (m *XMMsgBind) String() string            { return proto.CompactTextString(m) }
func (*XMMsgBind) ProtoMessage()               {}
func (*XMMsgBind) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *XMMsgBind) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *XMMsgBind) GetKick() string {
	if m != nil && m.Kick != nil {
		return *m.Kick
	}
	return ""
}

func (m *XMMsgBind) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *XMMsgBind) GetClientAttrs() string {
	if m != nil && m.ClientAttrs != nil {
		return *m.ClientAttrs
	}
	return ""
}

func (m *XMMsgBind) GetCloudAttrs() string {
	if m != nil && m.CloudAttrs != nil {
		return *m.CloudAttrs
	}
	return ""
}

func (m *XMMsgBind) GetSig() string {
	if m != nil && m.Sig != nil {
		return *m.Sig
	}
	return ""
}

type XMMsgBindResp struct {
	Result           *bool   `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	ErrorType        *string `protobuf:"bytes,2,opt,name=error_type,json=errorType" json:"error_type,omitempty"`
	ErrorReason      *string `protobuf:"bytes,3,opt,name=error_reason,json=errorReason" json:"error_reason,omitempty"`
	ErrorDesc        *string `protobuf:"bytes,4,opt,name=error_desc,json=errorDesc" json:"error_desc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *XMMsgBindResp) Reset()                    { *m = XMMsgBindResp{} }
func (m *XMMsgBindResp) String() string            { return proto.CompactTextString(m) }
func (*XMMsgBindResp) ProtoMessage()               {}
func (*XMMsgBindResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *XMMsgBindResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *XMMsgBindResp) GetErrorType() string {
	if m != nil && m.ErrorType != nil {
		return *m.ErrorType
	}
	return ""
}

func (m *XMMsgBindResp) GetErrorReason() string {
	if m != nil && m.ErrorReason != nil {
		return *m.ErrorReason
	}
	return ""
}

func (m *XMMsgBindResp) GetErrorDesc() string {
	if m != nil && m.ErrorDesc != nil {
		return *m.ErrorDesc
	}
	return ""
}

type XMMsgPing struct {
	Stats            []byte                         `protobuf:"bytes,1,opt,name=stats" json:"stats,omitempty"`
	Psc              *protocol.PushServiceConfigMsg `protobuf:"bytes,2,opt,name=psc" json:"psc,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *XMMsgPing) Reset()                    { *m = XMMsgPing{} }
func (m *XMMsgPing) String() string            { return proto.CompactTextString(m) }
func (*XMMsgPing) ProtoMessage()               {}
func (*XMMsgPing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *XMMsgPing) GetStats() []byte {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *XMMsgPing) GetPsc() *protocol.PushServiceConfigMsg {
	if m != nil {
		return m.Psc
	}
	return nil
}

type XMMsgNotify struct {
	ErrCode          *int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrStr           *string `protobuf:"bytes,2,opt,name=err_str,json=errStr" json:"err_str,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *XMMsgNotify) Reset()                    { *m = XMMsgNotify{} }
func (m *XMMsgNotify) String() string            { return proto.CompactTextString(m) }
func (*XMMsgNotify) ProtoMessage()               {}
func (*XMMsgNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *XMMsgNotify) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *XMMsgNotify) GetErrStr() string {
	if m != nil && m.ErrStr != nil {
		return *m.ErrStr
	}
	return ""
}

func init() {
	proto.RegisterType((*ClientHeader)(nil), "ims.ClientHeader")
	proto.RegisterType((*XMMsgConn)(nil), "ims.XMMsgConn")
	proto.RegisterType((*XMMsgConnResp)(nil), "ims.XMMsgConnResp")
	proto.RegisterType((*XMMsgBind)(nil), "ims.XMMsgBind")
	proto.RegisterType((*XMMsgBindResp)(nil), "ims.XMMsgBindResp")
	proto.RegisterType((*XMMsgPing)(nil), "ims.XMMsgPing")
	proto.RegisterType((*XMMsgNotify)(nil), "ims.XMMsgNotify")
	proto.RegisterEnum("ims.ClientHeader_MSG_DIR_FLAG", ClientHeader_MSG_DIR_FLAG_name, ClientHeader_MSG_DIR_FLAG_value)
}

func init() {
	proto.RegisterFile("messaging-protobuf/xiaomi-protobuf-messaging/src/main/proto/ims_push_service.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 709 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x5d, 0x6f, 0xc3, 0x34,
	0x14, 0x55, 0x92, 0xf5, 0x23, 0x6e, 0x37, 0x55, 0x16, 0x1a, 0x61, 0x82, 0x51, 0xfa, 0xd4, 0x97,
	0xb5, 0x68, 0x6f, 0x3c, 0x96, 0xec, 0x03, 0x24, 0x3a, 0x3a, 0x07, 0x09, 0x78, 0x21, 0xca, 0x6c,
	0x37, 0xb5, 0x9a, 0xd8, 0x91, 0xed, 0x4c, 0xec, 0x1f, 0x20, 0xf1, 0x33, 0xf8, 0xa1, 0x20, 0xdf,
	0xb8, 0x5d, 0x79, 0x40, 0x9a, 0xc4, 0xdb, 0x3d, 0xc7, 0x37, 0xd7, 0x27, 0xe7, 0xf8, 0x22, 0x52,
	0x73, 0x63, 0x8a, 0x52, 0xc8, 0xf2, 0xa6, 0xd1, 0xca, 0xaa, 0x97, 0x76, 0xbb, 0xfc, 0x5d, 0x14,
	0xaa, 0x16, 0x47, 0x7c, 0x73, 0x6c, 0x59, 0x1a, 0x4d, 0x97, 0x75, 0x21, 0xe4, 0x12, 0xce, 0x96,
	0xa2, 0x36, 0x79, 0xd3, 0x9a, 0x5d, 0x6e, 0xb8, 0x7e, 0x15, 0x94, 0x2f, 0x80, 0xc6, 0x91, 0xa8,
	0xcd, 0xd5, 0xf3, 0xff, 0x19, 0x4c, 0x95, 0xb4, 0x5a, 0x55, 0x79, 0xd7, 0xe0, 0xe7, 0xce, 0xfe,
	0x8c, 0xd0, 0x38, 0xad, 0x04, 0x97, 0xf6, 0x3b, 0x5e, 0x30, 0xae, 0x31, 0x46, 0x67, 0x74, 0x27,
	0x58, 0x12, 0x4c, 0x83, 0x79, 0x8f, 0x40, 0xed, 0xb8, 0xb6, 0x15, 0x2c, 0x09, 0xa7, 0xc1, 0x3c,
	0x22, 0x50, 0xe3, 0x4b, 0xd4, 0x77, 0x0a, 0xb9, 0x4e, 0xa2, 0x69, 0x30, 0x8f, 0x89, 0x47, 0xf8,
	0x0a, 0x0d, 0x35, 0x37, 0xaa, 0xd5, 0x94, 0x27, 0x67, 0x70, 0x72, 0xc4, 0x78, 0x82, 0x22, 0x5a,
	0xb3, 0xa4, 0x07, 0xb4, 0x2b, 0x61, 0x4a, 0xfb, 0xe2, 0xc8, 0xbe, 0x9f, 0x02, 0x08, 0x5f, 0xa0,
	0x50, 0xb0, 0x64, 0x00, 0x5c, 0x28, 0x18, 0xfe, 0x06, 0x0d, 0x99, 0xd0, 0xf9, 0xb6, 0x2a, 0xca,
	0x64, 0x38, 0x0d, 0xe6, 0x17, 0xb7, 0xd7, 0x0b, 0x51, 0x9b, 0xc5, 0xa9, 0xf4, 0xc5, 0x3a, 0x7b,
	0xcc, 0xef, 0xbe, 0x27, 0xf9, 0xc3, 0x0f, 0xab, 0x47, 0x32, 0x60, 0x42, 0x3f, 0x54, 0x45, 0xe9,
	0xae, 0xa0, 0xa2, 0xd9, 0x71, 0x9d, 0xc4, 0xf0, 0x4b, 0x1e, 0xe1, 0xcf, 0xd0, 0x90, 0x6b, 0x9d,
	0x53, 0xc5, 0x78, 0x82, 0xe0, 0x64, 0xc0, 0xb5, 0x4e, 0x15, 0xe3, 0xf8, 0x53, 0xe4, 0xca, 0xdc,
	0x58, 0x9d, 0x8c, 0x3a, 0x59, 0x5c, 0xeb, 0xcc, 0xea, 0xd9, 0x6f, 0x68, 0x7c, 0x7a, 0x09, 0x3e,
	0x47, 0x71, 0x9a, 0xe5, 0x3f, 0x3e, 0xdd, 0xff, 0xbc, 0xfa, 0x75, 0x12, 0x60, 0x84, 0xfa, 0x69,
	0x96, 0x93, 0xfb, 0xe7, 0x49, 0x88, 0x47, 0x68, 0x00, 0x75, 0xb6, 0x99, 0x44, 0xae, 0x2f, 0x4b,
	0x0f, 0x7d, 0x67, 0xae, 0x2f, 0x4b, 0xa1, 0xaf, 0xe7, 0xfa, 0xa0, 0xce, 0x36, 0x93, 0xfe, 0xec,
	0xef, 0x00, 0xc5, 0xbf, 0xac, 0xd7, 0xa6, 0x4c, 0x95, 0x94, 0x38, 0x41, 0x83, 0x57, 0xae, 0x8d,
	0x50, 0x12, 0xd2, 0x38, 0x27, 0x07, 0x88, 0x3f, 0x41, 0xbd, 0x5a, 0x31, 0x5e, 0x41, 0x22, 0x31,
	0xe9, 0x80, 0x33, 0x4d, 0x19, 0x1f, 0x47, 0xa8, 0x0c, 0xc4, 0xc6, 0x04, 0xf3, 0x31, 0x40, 0xed,
	0x22, 0x30, 0x6c, 0x0f, 0x11, 0xf4, 0x88, 0x2b, 0xc1, 0x1f, 0x25, 0x65, 0x63, 0x0f, 0x11, 0x74,
	0xc8, 0x7d, 0xbd, 0x53, 0xc6, 0xfa, 0x10, 0xa0, 0x76, 0xbd, 0x95, 0xa2, 0x45, 0xc5, 0x21, 0x84,
	0x98, 0x78, 0x84, 0xbf, 0x46, 0x51, 0x63, 0x28, 0x18, 0x3c, 0xba, 0xbd, 0xee, 0x9e, 0x16, 0x55,
	0xd5, 0x62, 0xd3, 0x9a, 0x5d, 0xd6, 0xbd, 0xe3, 0x54, 0xc9, 0xad, 0x28, 0xd7, 0xa6, 0x24, 0xae,
	0xd5, 0x4d, 0x2a, 0x24, 0x73, 0xcf, 0xa7, 0xf3, 0xde, 0xa3, 0x99, 0x41, 0xe7, 0x47, 0x03, 0x08,
	0x37, 0x0d, 0xfe, 0x1c, 0xc5, 0x74, 0x57, 0x54, 0x15, 0x97, 0x25, 0x07, 0x1b, 0x62, 0xf2, 0x4e,
	0x1c, 0x45, 0x86, 0x27, 0x22, 0xbd, 0x98, 0xe8, 0xc3, 0x62, 0x66, 0x7f, 0x1d, 0x6c, 0xff, 0x56,
	0x48, 0xe6, 0xcc, 0xb5, 0x6a, 0xcf, 0xa5, 0xbf, 0xad, 0x03, 0xee, 0xa6, 0xbd, 0xa0, 0xfb, 0xc3,
	0x4d, 0xae, 0x76, 0x3f, 0x51, 0x73, 0xbb, 0x53, 0xec, 0xb0, 0x03, 0x1d, 0xc2, 0x5f, 0xa1, 0x31,
	0x85, 0x87, 0x99, 0x17, 0xd6, 0x6a, 0xe3, 0x03, 0x18, 0x75, 0xdc, 0xca, 0x51, 0xf8, 0x4b, 0x34,
	0xa2, 0x95, 0x6a, 0x99, 0xef, 0xe8, 0x56, 0x02, 0x01, 0xd5, 0x35, 0xb8, 0xa0, 0x44, 0xe9, 0x33,
	0x71, 0xe5, 0xec, 0x8f, 0xc0, 0x7b, 0xe3, 0x54, 0x82, 0x37, 0x97, 0xa8, 0xaf, 0xb9, 0x69, 0x2b,
	0x0b, 0x52, 0x87, 0xc4, 0x23, 0xfc, 0x05, 0x42, 0x5c, 0x6b, 0xa5, 0x73, 0xfb, 0xd6, 0x70, 0xaf,
	0x38, 0x06, 0xe6, 0xa7, 0xb7, 0x86, 0x3b, 0x79, 0xdd, 0xb1, 0xe6, 0x85, 0x51, 0xd2, 0x8b, 0x1f,
	0x01, 0x47, 0x80, 0x7a, 0x9f, 0xc0, 0xb8, 0xa1, 0x5e, 0x7f, 0x37, 0xe1, 0x8e, 0x1b, 0x3a, 0xcb,
	0xbc, 0x5f, 0x1b, 0x21, 0x4b, 0xe7, 0x97, 0xb1, 0x85, 0x35, 0x20, 0x62, 0x4c, 0x3a, 0x70, 0x48,
	0x21, 0xfc, 0x78, 0x0a, 0x2b, 0x34, 0x82, 0xa1, 0x4f, 0xca, 0x8a, 0xed, 0xdb, 0xbf, 0xf6, 0x33,
	0xf8, 0xcf, 0xfd, 0x0c, 0x4f, 0xf7, 0xf3, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x22, 0x5f, 0xe3,
	0xdc, 0x7a, 0x05, 0x00, 0x00,
}
